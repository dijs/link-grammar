ffi = require "ffi"
fs = require "fs"
ref = require "ref"
StructType = require "ref-struct"

pointerType = "pointer"
string = "string"
int = "int"
voidType = "void"

ParseOptions = pointerType 
Dictionary = pointerType
Sentence = pointerType
Linkage = pointerType

CNode = StructType(
	label: ref.types.CString
	start: ref.types.int
	end: ref.types.int
)
CNodePtr = ref.refType CNode
CNode.defineProperty "next", CNodePtr
CNode.defineProperty "child", CNodePtr

apiTemplate =
	parse_options_create: [ ParseOptions, [ ] ]
	dictionary_create: [ Dictionary, [ string, string, string, string ] ]
	sentence_create: [ Sentence, [ string, Dictionary ] ]
	sentence_parse: [ int, [ Sentence, ParseOptions ] ]
	linkage_create: [ Linkage, [ int, Sentence, ParseOptions ] ]
	linkage_print_diagram: [ string, [ Linkage ] ]
	linkage_constituent_tree: [ CNodePtr, [ Linkage ] ]
	linkage_get_link_label: [ string, [ Linkage, int ] ]
	linkage_get_link_llabel: [ string, [ Linkage, int ] ]
	linkage_get_link_rlabel: [ string, [ Linkage, int ] ]
	linkage_get_word: [ string, [ Linkage, int ] ]
	linkage_get_link_lword: [ int, [ Linkage, int ] ]
	linkage_get_link_rword: [ int, [ Linkage, int ] ]

libPath = "./lib/libparser"

lib = ffi.Library libPath, apiTemplate

class Parser
	
	#use a different input for the data... maybe options object
	method initialize(dictPath = voidType, ppPath = voidType, consPath = voidType, affixPath = voidType)
		me._options = lib.parse_options_create()
		# need to make sure these files exist... or else seg fault...
		me._dictionary = lib.dictionary_create dictPath, ppPath, consPath, affixPath

	method getLinks(input)
		sentence = lib.sentence_create input, me._dictionary
		numLinkages = lib.sentence_parse sentence, me._options
		linkage = lib.linkage_create 0, sentence, me._options
		links = []
		index = 0
		while index < numLinkages
			links.push(
				label: lib.linkage_get_link_label linkage, index
				left:
					label: lib.linkage_get_link_llabel linkage, index
					word: lib.linkage_get_word linkage, lib.linkage_get_link_lword(linkage, index)
				right:
					label: lib.linkage_get_link_rlabel linkage, index
					word: lib.linkage_get_word linkage, lib.linkage_get_link_rword(linkage, index)
			)
			index = index + 1
		return links

module.exports = Parser		